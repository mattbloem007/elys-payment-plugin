{"id":"uDCt","dependencies":[{"name":"/Users/gabriel/Documents/paymentelys/package.json","includedInParent":true,"mtime":1629880755799},{"name":"/Users/gabriel/Documents/paymentelys/node_modules/ethjs-util/package.json","includedInParent":true,"mtime":1629877550665},{"name":"is-hex-prefixed","loc":{"line":3,"column":28},"parent":"/Users/gabriel/Documents/paymentelys/node_modules/ethjs-util/lib/index.js","resolved":"/Users/gabriel/Documents/paymentelys/node_modules/is-hex-prefixed/src/index.js"},{"name":"strip-hex-prefix","loc":{"line":4,"column":29},"parent":"/Users/gabriel/Documents/paymentelys/node_modules/ethjs-util/lib/index.js","resolved":"/Users/gabriel/Documents/paymentelys/node_modules/strip-hex-prefix/src/index.js"},{"name":"buffer","parent":"/Users/gabriel/Documents/paymentelys/node_modules/ethjs-util/lib/index.js","resolved":"/Users/gabriel/Documents/paymentelys/node_modules/node-libs-browser/node_modules/buffer/index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar r=require(\"buffer\").Buffer;function t(r){return(t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\"function\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\"symbol\":typeof r})(r)}var e=require(\"is-hex-prefixed\"),n=require(\"strip-hex-prefix\");function i(r){var e=r;if(\"string\"!=typeof e)throw new Error(\"[ethjs-util] while padding to even, value must be string, is currently \"+t(e)+\", while padToEven.\");return e.length%2&&(e=\"0\"+e),e}function o(r){return\"0x\"+r.toString(16)}function u(t){var e=o(t);return new r(i(e.slice(2)),\"hex\")}function f(e){if(\"string\"!=typeof e)throw new Error(\"[ethjs-util] while getting binary size, method getBinarySize requires input 'str' to be type String, got '\"+t(e)+\"'.\");return r.byteLength(e,\"utf8\")}function a(r,e,n){if(!0!==Array.isArray(r))throw new Error(\"[ethjs-util] method arrayContainsArray requires input 'superset' to be an array got type '\"+t(r)+\"'\");if(!0!==Array.isArray(e))throw new Error(\"[ethjs-util] method arrayContainsArray requires input 'subset' to be an array got type '\"+t(e)+\"'\");return e[Boolean(n)?\"some\":\"every\"](function(t){return r.indexOf(t)>=0})}function s(t){return new r(i(n(t).replace(/^0+|0+$/g,\"\")),\"hex\").toString(\"utf8\")}function y(r){var t=\"\",e=0,n=r.length;for(\"0x\"===r.substring(0,2)&&(e=2);e<n;e+=2){var i=parseInt(r.substr(e,2),16);t+=String.fromCharCode(i)}return t}function g(t){return\"0x\"+i(new r(t,\"utf8\").toString(\"hex\")).replace(/^0+|0+$/g,\"\")}function p(r){for(var t=\"\",e=0;e<r.length;e++){var n=r.charCodeAt(e).toString(16);t+=n.length<2?\"0\"+n:n}return\"0x\"+t}function h(r,e,n){if(!Array.isArray(r))throw new Error(\"[ethjs-util] method getKeys expecting type Array as 'params' input, got '\"+t(r)+\"'\");if(\"string\"!=typeof e)throw new Error(\"[ethjs-util] method getKeys expecting type String for input 'key' got '\"+t(e)+\"'.\");for(var i=[],o=0;o<r.length;o++){var u=r[o][e];if(n&&!u)u=\"\";else if(\"string\"!=typeof u)throw new Error(\"invalid abi\");i.push(u)}return i}function l(r,t){return!(\"string\"!=typeof r||!r.match(/^0x[0-9A-Fa-f]*$/))&&(!t||r.length===2+2*t)}module.exports={arrayContainsArray:a,intToBuffer:u,getBinarySize:f,isHexPrefixed:e,stripHexPrefix:n,padToEven:i,intToHex:o,fromAscii:p,fromUtf8:g,toAscii:y,toUtf8:s,getKeys:h,isHexString:l};"},"sourceMaps":null,"error":null,"hash":"5a1ea4878a8ab0296ff76fa43c587d1f","cacheData":{"env":{}}}